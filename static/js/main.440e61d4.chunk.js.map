{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","../node_modules/encoding/lib sync","../node_modules/@trust/jose/node_modules/@trust/webcrypto/src/algorithms sync","../node_modules/@trust/oidc-rp/node_modules/@trust/webcrypto/src/algorithms sync","components/Navigation/Navigation.js","components/HeroSection/HeroSection.js","components/ModalNotification/ModalNotificationView.js","components/start/Start.js","components/GetUser/GetUser.js","App.js","serviceWorker.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","Navigation","react_default","a","createElement","style","padding","Navbar_default","bg","variant","fixed","Brand","src","width","height","alt","marginLeft","Nav_default","className","react_router_dom","to","color","HeroSection","display","ModalNotificationView","Modal_default","assign","this","props","size","aria-labelledby","centered","iframe","url","position","allowFullScreen","styles","justifyContent","alignItems","React","Component","Start","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchUser","auth","trackSession","session","webId","console","log","rdf","graph","setState","sendNotification","inboxAddress","state","replace","store","options","noMeta","contentType","body","Fetcher","webOperation","modalShow","Container","components_HeroSection_HeroSection","Row","Button","onClick","toggleModal","bind","ModalNotification_ModalNotificationView","show","onHide","GetUser","App","components_Navigation_Navigation","react_router","path","render","start_Start","exact","components_GetUser_GetUser","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.440e61d4.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 116,\n\t\"./N3Lexer.js\": 116,\n\t\"./N3Parser\": 117,\n\t\"./N3Parser.js\": 117,\n\t\"./N3Store\": 175,\n\t\"./N3Store.js\": 175,\n\t\"./N3StreamParser\": 176,\n\t\"./N3StreamParser.js\": 176,\n\t\"./N3StreamWriter\": 181,\n\t\"./N3StreamWriter.js\": 181,\n\t\"./N3Util\": 118,\n\t\"./N3Util.js\": 118,\n\t\"./N3Writer\": 121,\n\t\"./N3Writer.js\": 121\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 346;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 432;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 548;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 577;","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"yoda-design-system\";\n\nconst Navigation = () => {\n  \n    return (\n      <div style={{ padding: \"3%\" }}>\n        <Navbar bg=\"light\" variant=\"light\" fixed=\"top\">\n          <Navbar.Brand>\n            <img src=\"favicon.ico\" width=\"30\" height=\"30\" alt=\"Solid logo\" />\n            <span style={{ marginLeft: \"5%\" }}>Dr Martens</span>\n          </Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <NavLink \n              to=\"/health-app/\" \n              style={{ color: \"#000\", marginLeft: \"25%\" }}>\n              Healthcase\n            </NavLink>\n            <NavLink \n              to=\"/getuser\" \n              style={{ color: \"#000\", marginLeft: \"25%\" }}>\n              Usercheck\n            </NavLink>\n          </Nav>\n        </Navbar>\n      </div>\n    );\n  }\n \nexport default Navigation;\n","import React from \"react\";\n\nconst HeroSection = () => {\n    return (\n        <img src=\"http://nationalpainreport.com/wp-content/uploads/2014/07/bigstock-Doctor-physician-Isolated-ov-33908342-e1446160270762.jpg\" alt=\"\" style={{display:\"flex\", width:\"100%\"}} />\n    );\n}\n\nexport default HeroSection;","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Iframe from 'react-iframe';\n\nclass ModalNotificationView extends React.Component {\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered>\n        <Iframe url=\"https://a-solid-web.github.io/profile-viewer-react/\"\n        height=\"800px\"\n        width=\"800px\"\n        position=\"relative\"\n        allowFullScreen\n        styles={{width: \"100%\", height: \"100%\", justifyContent:'center', alignItems:'center'}}/>\n      </Modal>\n    );\n  }\n}\nexport default ModalNotificationView;\n","import React, { Component } from \"react\";\nimport HeroSection from \"../HeroSection/HeroSection\";\nimport ModalNotificationView from \"../ModalNotification/ModalNotificationView\";\nimport { Container, Button, Row } from \"react-bootstrap\";\nimport rdf from \"rdflib\";\nimport auth from \"solid-auth-client\";\n\nclass Start extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      webId: \"\"\n    };\n  }\n\n  fetchUser = () => {\n    auth.trackSession(session => {\n      if (!session) {\n        console.log(\"You are not logged in\");\n      } else {\n        const webId = session.webId;\n        console.log(webId);\n\n        const store = rdf.graph();\n\n        this.setState({\n          webId: webId\n        });\n      }\n    });\n  };\n\n  toggleModal() {\n    if (!this.state.modalShow) {\n      this.sendNotification();\n    }\n    this.setState({ modalShow: !this.state.modalShow });\n  }\n\n  sendNotification = () => {\n    const inboxAddress = this.state.webId.replace(\"profile/card#me\", \"inbox\");\n\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n\n    let createTurtle = `\n        @prefix : <#>.\n        @prefix inbox: <./>.\n        @prefix solid: <http://www.w3.org/ns/solid/terms#>.\n        @prefix as: <http://www.w3.org/ns/activitystreams#>.\n        @prefix PREQ: <https://a-solid-web.github.io/permission-ontology/permissionrequests.rdf#> .\n        \n        <> a solid:Notification , as:Announce, PREQ:DataRequest;\n          PREQ:requestDataType PREQ:HealthData;\n          PREQ:requests <https://ludwigschubert.solid.community/private/health>;\n          PREQ:requestFrom <https://malte18.solid.community/profile/card#me>.\n        `;\n\n    //When deleting use DELETE instead of INSERT\n    const options = {\n      noMeta: true,\n      contentType: \"text/turtle\",\n      body: createTurtle\n    };\n    fetcher.webOperation(\"POST\", inboxAddress, options);\n  };\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <HeroSection />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <Row>\n            <h1>Send me your X-Ray Data!</h1>\n          </Row>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <Row>\n            <Button variant=\"primary\" onClick={this.toggleModal.bind(this)}>\n              Give Permission with SOIL\n            </Button>\n          </Row>\n        </div>\n        <ModalNotificationView\n          show={this.state.modalShow}\n          onHide={this.toggleModal.bind(this)}\n          style={{display:\"flex\", width:\"100%\", height:\"100%\", justifyContent:'center', alignItems:'center'}}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default Start;\n","import React from \"react\"; \nimport rdf from \"rdflib\";\nimport auth from \"solid-auth-client\";\n\n\nclass GetUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            webId: \"\"\n        }\n    }\n\n    fetchUser = () => {\n        auth.trackSession(session => {\n          if (!session) {\n            console.log(\"You are not logged in\");\n          } else {\n            const webId = session.webId;\n            console.log(webId);\n\n            const store = rdf.graph();\n\n            this.setState({\n              webId: webId\n            });\n          }\n        });\n      }\n      \n      componentDidMount() {\n        this.fetchUser();\n      }\n      render() {\n        return(\n            <div>\n                {this.state.webId}\n            </div>\n        );\n    }\n}\n\nexport default GetUser;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route , Switch} from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport Start from './components/start/Start';\nimport GetUser from './components/GetUser/GetUser';\n\nclass App extends React.Component {\n  render() {\n    let toggleModal = () => this.setState({ modalShow: !this.state.modalShow });\n\n    return (\n     <BrowserRouter>\n      <div>\n        <Navigation />\n        <Switch>\n          <Route path=\"/health-app/\" render={() => <Start /> } exact />\n          <Route path=\"/getuser\" render= {() => <GetUser /> } exact /> \n          <Route path=\"/\" render= {() => <Start /> } exact /> \n        </Switch>\n      </div>\n    </BrowserRouter>  \n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}